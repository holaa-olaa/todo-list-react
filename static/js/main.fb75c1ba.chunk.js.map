{"version":3,"sources":["Form/styles.js","Form/index.js","Tasks/styles.js","Tasks/index.js","Buttons/styles.js","Buttons/index.js","Section/styles.js","Section/index.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["StyledForm","styled","form","theme","breakpoints","tablet","SubmitButton","button","colors","teal","white","Input","input","grey","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","newTaskTrimmed","trim","preventDefault","current","focus","value","onChange","target","placeholder","autoFocus","required","ref","type","List","ul","Item","li","hidden","css","Content","span","done","Button","toggleDone","green","remove","red","Tasks","tasks","hideDoneTask","removeTasks","toggleTaskDone","map","task","onClick","id","content","ButtonsContainer","div","darkGrey","Buttons","toggleHideDone","setAllDone","length","disabled","every","StyledSection","section","Header","header","Heading","h2","Section","title","mainContent","extraHeaderContent","Container","main","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb75c1ba.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n    font-size: 16px;\n    padding: 20px;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-gap: 20px;\n\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px) {\n        grid-template-columns: 1fr;\n    }\n`;\n\nexport const SubmitButton = styled.button`\n    background-color: ${({ theme }) => theme.colors.teal};\n    color: ${({ theme }) => theme.colors.white};\n    padding: 10px;\n    border: none;\n    cursor: pointer;\n\n    &:hover {\n        filter: brightness(110%);\n        transform: scale(1.1);\n        transition: 0.4s;\n    }\n\n    &:active {\n        filter: brightness(120%);\n    }\n`;\n\nexport const Input = styled.input`\n    border: 1px solid ${({ theme }) => theme.colors.grey};\n    padding: 10px;\n`;","import { StyledForm, SubmitButton, Input } from './styles.js';\nimport { useState, useRef } from 'react';\n\nconst Form = ({ addNewTask }) => {\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\n    const inputRef = useRef();\n\n    const focusInput = () => {\n        inputRef.current.focus();\n    };\n\n    const onFormSubmit = (event) => {\n        const newTaskTrimmed = newTaskContent.trim();\n\n        event.preventDefault();\n        setNewTaskContent(\"\");\n\n        if (newTaskTrimmed !== \"\") {\n            addNewTask(newTaskTrimmed);\n        };\n\n        focusInput();\n    };\n\n    return (\n        <StyledForm onSubmit={onFormSubmit}>\n            <Input\n                value={newTaskContent}\n                onChange={({ target }) => setNewTaskContent(target.value)}\n                placeholder=\"Co jest do zrobienia?\"\n                autoFocus\n                required\n                ref={inputRef}\n            />\n            <SubmitButton type=\"submit\">\n                Dodaj zadanie\n            </SubmitButton>\n        </StyledForm>\n    );\n};\n\nexport default Form;","import styled, { css } from 'styled-components';\n\nexport const List = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 20px;\n`;\n\nexport const Item = styled.li`\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grey};\n    padding: 10px;\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    align-items: center;\n    grid-gap: 10px;\n\n    ${({ hidden }) => hidden && css`\n        display: none;\n    `}\n`;\n\nexport const Content = styled.span`\n    word-break: break-word;\n\n    ${({ done }) => done && css`\n        text-decoration: line-through;\n    `}\n`;\n\nexport const Button = styled.button`\n    border: none;\n    height: 30px;\n    width: 30px;\n    color: ${({ theme }) => theme.colors.white};\n    padding: 0;\n    cursor: pointer;\n    transition: background 0.3s;\n\n    ${({ toggleDone }) => toggleDone && css`\n        background: ${({ theme }) => theme.colors.green};\n\n        &:hover {\n            filter: brightness(110%);\n        }\n        &:active {\n            filter: brightness(120%);\n        }\n    `}\n\n    ${({ remove }) => remove && css`\n        background: ${({ theme }) => theme.colors.red};\n\n        &:hover {\n            filter: brightness(110%);\n        }\n        &:active {\n            filter: brightness(120%);\n        }\n    `}\n`;","import { List, Item, Content, Button } from './styles.js';\n\nconst Tasks = ({ tasks, hideDoneTask, removeTasks, toggleTaskDone }) => (\n    <List>\n        {tasks.map(task => (\n            <Item\n                key={task.id}\n                hidden={task.done && hideDoneTask}\n            >\n                <Button\n                    toggleDone\n                    onClick={() => toggleTaskDone(task.id)}\n                >\n                    {task.done ? \"âœ”\" : \"\"}\n                </Button>\n                <Content done={task.done}>\n                    {task.content}\n                </Content>\n                <Button\n                    remove\n                    onClick={() => removeTasks(task.id)}\n                >\n                    ðŸ—‘\n                </Button>\n            </Item>\n        ))}\n    </List>\n);\n\nexport default Tasks;","import styled from 'styled-components';\n\nexport const ButtonsContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nexport const Button = styled.button`\n    border: none;\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.teal};\n    margin: 0 0 0 20px;\n    transition: color 0.4s;\n    cursor: pointer;\n\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px) {\n        flex-basis: 100%;\n        margin: 10px;\n    }\n\n    &:hover {\n        filter: brightness(110%);\n    }\n\n    &:active {\n        filter: brightness(120%);\n    }\n\n    &:disabled {\n        color: ${({ theme }) => theme.colors.darkGrey};\n        cursor: not-allowed;\n    }\n`;","import {ButtonsContainer, Button} from './styles.js';\n\nconst Buttons = ({ tasks, hideDoneTask, toggleHideDone, setAllDone }) => (\n    <ButtonsContainer>\n        {tasks.length > 0 && (\n            <>\n                <Button onClick={toggleHideDone}>\n                    {hideDoneTask ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj ukoÅ„czone\"}\n                </Button>\n                <Button \n                    disabled={tasks.every(({ done }) => done)} \n                    onClick={setAllDone}\n                >\n                    UkoÅ„cz wszystkie\n                </Button>\n            </>\n        )}\n    </ButtonsContainer>\n);\n\nexport default Buttons;","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n    border: 1px solid ${({ theme }) => theme.colors.grey};\n    background-color: ${({ theme }) => theme.colors.white};\n    margin: 10px auto;\n`;\n\nexport const Header = styled.header`\n    border-bottom: solid 1px ${({ theme }) => theme.colors.grey};\n    padding: 20px;\n    display: grid;\n    grid-template-columns: auto auto;\n    align-items: center;\n    justify-content: space-between;\n    grid-gap: 20px;\n\n    @media(max-width: ${({ theme }) => theme.breakpoints.tablet}px) {\n        grid-template-columns: 1fr;\n    }\n`;\n\nexport const Heading = styled.h2`\n    font-size: 20px;\n    margin: 0;\n`;","import { StyledSection, Header, Heading } from './styles.js';\n\nconst Section = ({ title, mainContent, extraHeaderContent }) => (\n    <StyledSection>\n        <Header>\n            <Heading>{title}</Heading>\n            {extraHeaderContent}\n        </Header>\n        {mainContent}\n    </StyledSection>\n);\n\nexport default Section;","import styled from 'styled-components';\n\nexport const Container = styled.main`\n    max-width: 900px;\n    padding: 30px;\n    margin: 0 auto;\n`;\n\nexport default Container;","import Form from './Form';\nimport Tasks from './Tasks';\nimport Buttons from './Buttons';\nimport Section from './Section';\nimport Container from './Container';\nimport { useState } from 'react';\nimport { useTasks } from './useTasks';\n\nfunction App() {\n  const [hideDoneTask, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDoneTask => !hideDoneTask);\n  };\n\n  const {\n    tasks,\n    removeTasks,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask\n  } = useTasks();\n\n  return (\n    <Container>\n      <h1>Lista zadaÅ„</h1>\n\n      <Section\n        title={\"Dodaj nowe zadanie\"}\n        mainContent={<Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        title={\"Lista zadaÅ„\"}\n        mainContent=\n        {<Tasks\n          tasks={tasks}\n          hideDoneTask={hideDoneTask}\n          removeTasks={removeTasks}\n          toggleTaskDone={toggleTaskDone}\n        />}\n        extraHeaderContent=\n        {<Buttons\n          tasks={tasks}\n          hideDoneTask={hideDoneTask}\n          toggleHideDone={toggleHideDone}\n          setAllDone={setAllDone}\n        />}\n      />\n    </Container>\n  );\n};\n\nexport default App;","import { useEffect, useState } from 'react';\n\nexport const useTasks = () => {\n    const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem(\"tasks\")) || []);\n\n    useEffect(() => {\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }, [tasks]);\n\n    const removeTasks = (id) => {\n        setTasks(tasks => tasks.filter(task => task.id !== id));\n    };\n\n    const toggleTaskDone = (id) => {\n        setTasks(tasks => tasks.map(task => task.id === id ? { ...task, done: !task.done } : task))\n    };\n\n    const setAllDone = () => {\n        setTasks(tasks => tasks.map(task => ({\n            ...task,\n            done: true,\n        })));\n    };\n\n    const addNewTask = (content) => {\n        setTasks(tasks => [\n            ...tasks,\n            {\n                content,\n                done: false,\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n            },\n        ]);\n    };\n\n    return { tasks, removeTasks, toggleTaskDone, setAllDone, addNewTask }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\n\nexport const GlobalStyle = createGlobalStyle`\n\n  ${normalize}\n  \n  html {\n    box-sizing: border-box;\n  }\n\n  *, ::after, ::before {\n    box-sizing: inherit;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    background-color: ${({ theme }) => theme.colors.grey};\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './GlobalStyle.js';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './theme.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    colors: {\n        teal: \"#007f80\",\n        grey: \"#ededed\",\n        white: \"#ffffff\",\n        red: \"hsl(348, 83%, 45%)\",\n        green: \"hsl(120, 61%, 30%)\",\n        darkGrey: \"#E2DFDF\",\n    },\n    breakpoints: {\n        tablet: 767,\n    }\n};"],"sourceRoot":""}